# Vault Helm Chart Value Overrides
global:
  enabled: true
  tlsDisable: false
  
  injector:
    enabled: true
 
    resources:
       requests:
         memory: 256Mi
         cpu: 250m
       limits:
         memory: 256Mi
         cpu: 250m
  
  server:
    # These Resource Limits are in line with node requirements in the 
    # Vault Reference Architecture for a Small Cluster
    resources:
      requests:
        memory: 4Gi
        cpu: 2000m
      limits:
        memory: 8Gi
        cpu: 2000m

    # For HA configuration and because we need to manually init the vault,
    # we need to define custom readiness/liveness Probe settings
    readinessProbe:
      enabled: true
      path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
    livenessProbe:
      enabled: true
      path: "/v1/sys/health?standbyok=true"
      initialDelaySeconds: 60
  
    # extraEnvironmentVars is a list of extra enviroment variables to set with the stateful set. These could be
    # used to include variables required for auto-unseal.
    extraEnvironmentVars:
       GOOGLE_REGION: global
       GOOGLE_PROJECT: my-project
       GOOGLE_APPLICATION_CREDENTIALS: /vault/userconfig/kms-creds/credentials.json
  
    # extraVolumes is a list of extra volumes to mount. These will be exposed
    # to Vault in the path `/vault/userconfig/<name>/`. The value below is
    # an array of objects, examples are shown below.
    extraVolumes: 
      - type: secret
        name: tls-server
      - type: secret
        name: tls-ca
      - type: secret
        name: kms-creds

    # This configures the Vault Statefulset to create a PVC for audit
    # logs.  Once Vault is deployed, initialized and unseal, Vault must
    # be configured to use this for audit logs.  This will be mounted to
    # /vault/audit
    # See https://www.vaultproject.io/docs/audit/index.html to know more
    auditStorage:
      enabled: true
 
    standalone:
      enabled: false
  
    # Run Vault in "HA" mode. There are no storage requirements unless audit log
    # persistence or Integrated Storage is required.
    ha:
      enabled: true
      replicas: 5
      raft:
        enabled: false
        config: |
          ui = true
          listener "tcp" {
            address = "[::]:8200"
            cluster_address = "[::]:8201"
            tls_cert_file = "/vault/userconfig/tls-server/server.crt"
            tls_key_file = "/vault/userconfig/tls-server/server.key"
            tls_key_file = "/vault/userconfig/tls-ca/ca.crt"          
          }

          storage "raft" {
            path = "/vault/data"
             retry_join {
              leader_api_addr = "https://vault-0.vault-internal:8200"
              leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
              leader_client_cert_file = "/vault/userconfig/tls-server/server.crt"
              leader_client_key_file = "/vault/userconfig/tls-server/server.key"
            }
            retry_join {
              leader_api_addr = "https://vault-1.vault-internal:8200"
              leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
              leader_client_cert_file = "/vault/userconfig/tls-server/server.crt"
              leader_client_key_file = "/vault/userconfig/tls-server/server.key"
            }
            retry_join {
              leader_api_addr = "https://vault-2.vault-internal:8200"
              leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
              leader_client_cert_file = "/vault/userconfig/tls-server/server.crt"
              leader_client_key_file = "/vault/userconfig/tls-server/server.key"
            }
            retry_join {
                leader_api_addr = "https://vault-3.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
                leader_client_cert_file = "/vault/userconfig/tls-server/server.crt"
                leader_client_key_file = "/vault/userconfig/tls-server/server.key"
            }
            retry_join {
                leader_api_addr = "https://vault-4.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
                leader_client_cert_file = "/vault/userconfig/tls-server/server.crt"
                leader_client_key_file = "/vault/userconfig/tls-server/server.key"
            }              
          }  
          
          seal "gcpckms" {
            credentials = "/vault/userconfig/kms-creds/credentials.json"            
            project     = "jca-tfe-testing-1da3236b"
            region      = "global"
            key_ring    = "vault-helm-unseal-kr"
            crypto_key  = "vault-helm-unseal-key"
          }
          
          service_registration "kubernetes" {}        
     
  # Vault UI
  ui:
    enabled: true
    serviceType: "LoadBalancer"
    serviceNodePort: null
    externalPort: 8200
    loadBalancerSourceRanges:
       - < Your IP RANGE Ex. 10.0.0.0/16 >
       - < YOUR SINGLE IP Ex. 1.78.23.3/32 >
